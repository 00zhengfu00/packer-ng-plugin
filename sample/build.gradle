buildscript {
    ext.packer_version = '1.0.13-SNAPSHOT'

    repositories {
        maven { url '/tmp/repo/' }
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:2.2.2"
        classpath "com.mcxiaoke.packer-ng:plugin:$packer_version"
    }
}

repositories {
    maven { url '/tmp/repo/' }
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

apply plugin: 'com.android.application'
apply plugin: 'packer'

// https://code.google.com/p/android/issues/detail?id=171089
dependencies {
    // compile project(':helper')
    compile "com.mcxiaoke.packer-ng:helper:$packer_version"
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile('com.mcxiaoke.next:core:1.5.0') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
}

packer {
    archiveNameFormat = '${channel}-${buildType}-v${versionName}-${versionCode}'
    archiveOutput = new File(project.rootProject.buildDir, "myapks")
    channelFile = new File(project.rootDir, "markets.txt")
    channelList = ['Douban', 'Google', '中文市场', 'Some Market', '!@#$%^', '20070601']
}

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        encoding "UTF-8"
    }

    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
    }

    signingConfigs {
        release {
            storeFile file("android.keystore")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
            v2SigningEnabled true
        }

        v2dev {
            storeFile file("android.keystore")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }

        //someType {
        //    minifyEnabled false
        //    debuggable true
        //}
        beta {
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
        }

        nosign {
            // invalid: no signingConfig
            minifyEnabled false
        }


    }

    lintOptions {
        abortOnError false
        htmlReport true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

}

//android.applicationVariants.all { variant ->
//    variant.outputs.each {
//        println("release: ${it.outputFile}")
//    }
//}

// gradle hook
//android.applicationVariants.all { variant ->
//    def copyAssets = project.task("copy${variant.name.capitalize()}Assets",
//            type: Copy) {
//        from "~/Downloads/demo"
//        into "src/main/assets/demo"
//        doLast {
//            println("copy assets to src/main/assets/demo for ${variant.name}")
//        }
//    }
//    def deleteAssets = project.task("delete${variant.name.capitalize()}Assets",
//            type: Delete) {
//        delete "src/main/assets/demo"
//        doLast {
//            println("delete assets in src/main/assets/demo for ${variant.name}")
//        }
//    }
//    variant.mergeAssets.dependsOn copyAssets
//    variant.assemble.dependsOn deleteAssets
//}

// gradle hook
//gradle.buildFinished { buildResult ->
//    println "BUILD FINISHED"
//    println "build failure - " + buildResult.failure
//}
